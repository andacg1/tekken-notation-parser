// Generated from src/grammar/TekkenNotation.g4 by ANTLR 4.13.1
// noinspection ES6UnusedImports,JSUnusedGlobalSymbols,JSUnusedLocalSymbols
import {
	ATN,
	ATNDeserializer,
	CharStream,
	DecisionState, DFA,
	Lexer,
	LexerATNSimulator,
	RuleContext,
	PredictionContextCache,
	Token
} from "antlr4";
export default class TekkenNotationLexer extends Lexer {
	public static readonly ACTION_INPUT = 1;
	public static readonly MOVEMENT_INPUT = 2;
	public static readonly SPECIAL_INPUT = 3;
	public static readonly ACTION_COMBINATOR = 4;
	public static readonly JUST_FRAME_COMBINATOR = 5;
	public static readonly IMMEDIATE_COMBINATOR = 6;
	public static readonly DELAYED_COMBINATOR = 7;
	public static readonly ALTERNATIVE_COMBINATOR = 8;
	public static readonly MOVEMENT_COMBINATOR = 9;
	public static readonly MOVE_SEPARATOR = 10;
	public static readonly INSTRUCTION_SEPARATOR = 11;
	public static readonly OPTIONAL_START_DELIMITER = 12;
	public static readonly OPTIONAL_END_DELIMITER = 13;
	public static readonly THROW_BREAK_START_DELIMITER = 14;
	public static readonly THROW_BREAK_END_DELIMITER = 15;
	public static readonly ANY_SPACE = 16;
	public static readonly SINGLE_SPACE = 17;
	public static readonly TEXT = 18;
	public static readonly OTHER = 19;
	public static readonly WS = 20;
	public static readonly EOF = Token.EOF;

	public static readonly channelNames: string[] = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	public static readonly literalNames: (string | null)[] = [ null, null, 
                                                            null, null, 
                                                            "'+'", "':'", 
                                                            "'~'", "'<'", 
                                                            "'_'", "'/'", 
                                                            "';'", null, 
                                                            null, null, 
                                                            "'{'", "'}'", 
                                                            null, "' '" ];
	public static readonly symbolicNames: (string | null)[] = [ null, "ACTION_INPUT", 
                                                             "MOVEMENT_INPUT", 
                                                             "SPECIAL_INPUT", 
                                                             "ACTION_COMBINATOR", 
                                                             "JUST_FRAME_COMBINATOR", 
                                                             "IMMEDIATE_COMBINATOR", 
                                                             "DELAYED_COMBINATOR", 
                                                             "ALTERNATIVE_COMBINATOR", 
                                                             "MOVEMENT_COMBINATOR", 
                                                             "MOVE_SEPARATOR", 
                                                             "INSTRUCTION_SEPARATOR", 
                                                             "OPTIONAL_START_DELIMITER", 
                                                             "OPTIONAL_END_DELIMITER", 
                                                             "THROW_BREAK_START_DELIMITER", 
                                                             "THROW_BREAK_END_DELIMITER", 
                                                             "ANY_SPACE", 
                                                             "SINGLE_SPACE", 
                                                             "TEXT", "OTHER", 
                                                             "WS" ];
	public static readonly modeNames: string[] = [ "DEFAULT_MODE", ];

	public static readonly ruleNames: string[] = [
		"ACTION_INPUT", "MOVEMENT_INPUT", "SPECIAL_INPUT", "ACTION_COMBINATOR", 
		"JUST_FRAME_COMBINATOR", "IMMEDIATE_COMBINATOR", "DELAYED_COMBINATOR", 
		"ALTERNATIVE_COMBINATOR", "MOVEMENT_COMBINATOR", "MOVE_SEPARATOR", "INSTRUCTION_SEPARATOR", 
		"OPTIONAL_START_DELIMITER", "OPTIONAL_END_DELIMITER", "THROW_BREAK_START_DELIMITER", 
		"THROW_BREAK_END_DELIMITER", "ACTION_ACTION_COMBINATOR", "MOVEMENT_ALIAS", 
		"RAGE_ALIAS", "WALL_ALIAS", "HIT_ALIAS", "STATE_ALIAS", "STANCE_ALIAS", 
		"ANY_SPACE", "SINGLE_SPACE", "TEXT", "OTHER", "WS",
	];


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(this, TekkenNotationLexer._ATN, TekkenNotationLexer.DecisionsToDFA, new PredictionContextCache());
	}

	public get grammarFileName(): string { return "TekkenNotation.g4"; }

	public get literalNames(): (string | null)[] { return TekkenNotationLexer.literalNames; }
	public get symbolicNames(): (string | null)[] { return TekkenNotationLexer.symbolicNames; }
	public get ruleNames(): string[] { return TekkenNotationLexer.ruleNames; }

	public get serializedATN(): number[] { return TekkenNotationLexer._serializedATN; }

	public get channelNames(): string[] { return TekkenNotationLexer.channelNames; }

	public get modeNames(): string[] { return TekkenNotationLexer.modeNames; }

	public static readonly _serializedATN: number[] = [4,0,20,477,6,-1,2,0,
	7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,
	7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,
	16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,
	2,24,7,24,2,25,7,25,2,26,7,26,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,3,1,71,8,1,3,1,73,8,1,1,2,1,2,1,2,1,2,1,2,3,2,80,8,2,
	1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,
	1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,15,3,15,109,8,15,1,16,1,
	16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
	1,16,1,16,1,16,1,16,1,16,1,16,3,16,133,8,16,1,17,1,17,1,17,1,17,1,17,1,
	17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,
	1,17,1,17,1,17,1,17,3,17,159,8,17,1,18,1,18,1,18,1,18,1,18,1,18,1,18,3,
	18,168,8,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,3,19,
	181,8,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,3,20,191,8,20,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,
	1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,
	21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,3,21,
	455,8,21,1,22,4,22,458,8,22,11,22,12,22,459,1,23,1,23,1,24,1,24,1,25,4,
	25,467,8,25,11,25,12,25,468,1,26,4,26,472,8,26,11,26,12,26,473,1,26,1,26,
	0,0,27,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,
	27,14,29,15,31,0,33,0,35,0,37,0,39,0,41,0,43,0,45,16,47,17,49,18,51,19,
	53,20,1,0,7,1,0,49,52,10,0,66,66,68,68,70,70,78,78,85,85,98,98,100,100,
	102,102,110,110,117,117,2,0,32,32,44,44,2,0,40,40,91,91,2,0,41,41,93,93,
	4,0,39,39,48,57,65,90,97,122,2,0,9,10,13,13,585,0,1,1,0,0,0,0,3,1,0,0,0,
	0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,
	0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,
	27,1,0,0,0,0,29,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
	0,0,0,53,1,0,0,0,1,55,1,0,0,0,3,72,1,0,0,0,5,79,1,0,0,0,7,81,1,0,0,0,9,
	83,1,0,0,0,11,85,1,0,0,0,13,87,1,0,0,0,15,89,1,0,0,0,17,91,1,0,0,0,19,93,
	1,0,0,0,21,95,1,0,0,0,23,97,1,0,0,0,25,99,1,0,0,0,27,101,1,0,0,0,29,103,
	1,0,0,0,31,108,1,0,0,0,33,132,1,0,0,0,35,158,1,0,0,0,37,167,1,0,0,0,39,
	180,1,0,0,0,41,190,1,0,0,0,43,454,1,0,0,0,45,457,1,0,0,0,47,461,1,0,0,0,
	49,463,1,0,0,0,51,466,1,0,0,0,53,471,1,0,0,0,55,56,7,0,0,0,56,2,1,0,0,0,
	57,73,7,1,0,0,58,59,5,81,0,0,59,60,5,67,0,0,60,71,5,70,0,0,61,62,5,81,0,
	0,62,63,5,67,0,0,63,71,5,66,0,0,64,65,5,72,0,0,65,66,5,67,0,0,66,71,5,70,
	0,0,67,68,5,72,0,0,68,69,5,67,0,0,69,71,5,66,0,0,70,58,1,0,0,0,70,61,1,
	0,0,0,70,64,1,0,0,0,70,67,1,0,0,0,71,73,1,0,0,0,72,57,1,0,0,0,72,70,1,0,
	0,0,73,4,1,0,0,0,74,80,3,33,16,0,75,80,3,35,17,0,76,80,3,37,18,0,77,80,
	3,41,20,0,78,80,3,43,21,0,79,74,1,0,0,0,79,75,1,0,0,0,79,76,1,0,0,0,79,
	77,1,0,0,0,79,78,1,0,0,0,80,6,1,0,0,0,81,82,5,43,0,0,82,8,1,0,0,0,83,84,
	5,58,0,0,84,10,1,0,0,0,85,86,5,126,0,0,86,12,1,0,0,0,87,88,5,60,0,0,88,
	14,1,0,0,0,89,90,5,95,0,0,90,16,1,0,0,0,91,92,5,47,0,0,92,18,1,0,0,0,93,
	94,5,59,0,0,94,20,1,0,0,0,95,96,7,2,0,0,96,22,1,0,0,0,97,98,7,3,0,0,98,
	24,1,0,0,0,99,100,7,4,0,0,100,26,1,0,0,0,101,102,5,123,0,0,102,28,1,0,0,
	0,103,104,5,125,0,0,104,30,1,0,0,0,105,109,3,7,3,0,106,109,3,11,5,0,107,
	109,3,13,6,0,108,105,1,0,0,0,108,106,1,0,0,0,108,107,1,0,0,0,109,32,1,0,
	0,0,110,111,5,68,0,0,111,112,5,65,0,0,112,113,5,83,0,0,113,133,5,72,0,0,
	114,115,5,67,0,0,115,133,5,68,0,0,116,117,5,83,0,0,117,133,5,83,0,0,118,
	119,5,83,0,0,119,120,5,83,0,0,120,133,5,76,0,0,121,122,5,83,0,0,122,123,
	5,83,0,0,123,133,5,82,0,0,124,125,5,83,0,0,125,133,5,87,0,0,126,127,5,83,
	0,0,127,128,5,87,0,0,128,133,5,76,0,0,129,130,5,83,0,0,130,131,5,87,0,0,
	131,133,5,82,0,0,132,110,1,0,0,0,132,114,1,0,0,0,132,116,1,0,0,0,132,118,
	1,0,0,0,132,121,1,0,0,0,132,124,1,0,0,0,132,126,1,0,0,0,132,129,1,0,0,0,
	133,34,1,0,0,0,134,135,5,82,0,0,135,136,5,65,0,0,136,137,5,71,0,0,137,159,
	5,69,0,0,138,139,5,82,0,0,139,140,5,65,0,0,140,141,5,71,0,0,141,142,5,69,
	0,0,142,143,5,65,0,0,143,144,5,82,0,0,144,159,5,84,0,0,145,146,5,82,0,0,
	146,147,5,65,0,0,147,148,5,71,0,0,148,149,5,69,0,0,149,150,5,68,0,0,150,
	151,5,82,0,0,151,152,5,73,0,0,152,153,5,86,0,0,153,159,5,69,0,0,154,155,
	5,82,0,0,155,159,5,65,0,0,156,157,5,82,0,0,157,159,5,68,0,0,158,134,1,0,
	0,0,158,138,1,0,0,0,158,145,1,0,0,0,158,154,1,0,0,0,158,156,1,0,0,0,159,
	36,1,0,0,0,160,161,5,87,0,0,161,162,5,65,0,0,162,163,5,76,0,0,163,168,5,
	76,0,0,164,165,5,87,0,0,165,168,5,33,0,0,166,168,5,87,0,0,167,160,1,0,0,
	0,167,164,1,0,0,0,167,166,1,0,0,0,168,38,1,0,0,0,169,170,5,83,0,0,170,181,
	5,33,0,0,171,181,5,83,0,0,172,173,5,65,0,0,173,181,5,33,0,0,174,181,5,65,
	0,0,175,176,5,75,0,0,176,177,5,78,0,0,177,181,5,68,0,0,178,179,5,67,0,0,
	179,181,5,72,0,0,180,169,1,0,0,0,180,171,1,0,0,0,180,172,1,0,0,0,180,174,
	1,0,0,0,180,175,1,0,0,0,180,178,1,0,0,0,181,40,1,0,0,0,182,183,5,66,0,0,
	183,191,5,84,0,0,184,185,5,70,0,0,185,191,5,67,0,0,186,187,5,87,0,0,187,
	191,5,83,0,0,188,189,5,87,0,0,189,191,5,82,0,0,190,182,1,0,0,0,190,184,
	1,0,0,0,190,186,1,0,0,0,190,188,1,0,0,0,191,42,1,0,0,0,192,193,5,87,0,0,
	193,194,5,82,0,0,194,455,5,65,0,0,195,196,5,66,0,0,196,197,5,68,0,0,197,
	455,5,83,0,0,198,199,5,70,0,0,199,455,5,66,0,0,200,201,5,69,0,0,201,202,
	5,70,0,0,202,455,5,66,0,0,203,204,5,69,0,0,204,205,5,70,0,0,205,455,5,70,
	0,0,206,207,5,90,0,0,207,208,5,69,0,0,208,455,5,78,0,0,209,210,5,72,0,0,
	210,211,5,78,0,0,211,455,5,68,0,0,212,213,5,82,0,0,213,214,5,76,0,0,214,
	455,5,88,0,0,215,216,5,65,0,0,216,217,5,79,0,0,217,455,5,80,0,0,218,219,
	5,82,0,0,219,220,5,68,0,0,220,455,5,83,0,0,221,222,5,76,0,0,222,223,5,70,
	0,0,223,455,5,70,0,0,224,225,5,82,0,0,225,226,5,70,0,0,226,455,5,70,0,0,
	227,228,5,76,0,0,228,229,5,70,0,0,229,455,5,83,0,0,230,231,5,82,0,0,231,
	232,5,70,0,0,232,455,5,83,0,0,233,234,5,86,0,0,234,235,5,84,0,0,235,455,
	5,83,0,0,236,237,5,68,0,0,237,238,5,83,0,0,238,455,5,83,0,0,239,240,5,84,
	0,0,240,241,5,70,0,0,241,455,5,83,0,0,242,243,5,72,0,0,243,244,5,77,0,0,
	244,455,5,83,0,0,245,246,5,72,0,0,246,247,5,66,0,0,247,455,5,83,0,0,248,
	249,5,82,0,0,249,250,5,79,0,0,250,455,5,76,0,0,251,252,5,67,0,0,252,253,
	5,82,0,0,253,455,5,65,0,0,254,255,5,83,0,0,255,256,5,78,0,0,256,455,5,65,
	0,0,257,258,5,84,0,0,258,259,5,71,0,0,259,455,5,82,0,0,260,261,5,68,0,0,
	261,262,5,71,0,0,262,455,5,78,0,0,263,264,5,80,0,0,264,265,5,65,0,0,265,
	455,5,78,0,0,266,267,5,80,0,0,267,268,5,72,0,0,268,455,5,88,0,0,269,270,
	5,80,0,0,270,271,5,76,0,0,271,455,5,68,0,0,272,273,5,70,0,0,273,274,5,67,
	0,0,274,275,5,68,0,0,275,276,5,32,0,0,276,277,5,82,0,0,277,278,5,76,0,0,
	278,455,5,88,0,0,279,280,5,83,0,0,280,281,5,73,0,0,281,282,5,84,0,0,282,
	283,5,32,0,0,283,284,5,83,0,0,284,285,5,78,0,0,285,455,5,65,0,0,286,287,
	5,68,0,0,287,288,5,82,0,0,288,455,5,85,0,0,289,290,5,73,0,0,290,291,5,78,
	0,0,291,455,5,83,0,0,292,293,5,70,0,0,293,294,5,76,0,0,294,455,5,69,0,0,
	295,296,5,68,0,0,296,297,5,71,0,0,297,455,5,70,0,0,298,299,5,77,0,0,299,
	300,5,69,0,0,300,455,5,68,0,0,301,302,5,75,0,0,302,303,5,73,0,0,303,455,
	5,78,0,0,304,305,5,78,0,0,305,306,5,83,0,0,306,455,5,83,0,0,307,308,5,80,
	0,0,308,309,5,68,0,0,309,455,5,80,0,0,310,311,5,70,0,0,311,312,5,76,0,0,
	312,455,5,65,0,0,313,314,5,67,0,0,314,315,5,69,0,0,315,455,5,83,0,0,316,
	317,5,75,0,0,317,318,5,78,0,0,318,455,5,80,0,0,319,320,5,83,0,0,320,321,
	5,84,0,0,321,455,5,67,0,0,322,323,5,83,0,0,323,324,5,68,0,0,324,455,5,87,
	0,0,325,326,5,72,0,0,326,327,5,65,0,0,327,455,5,90,0,0,328,329,5,67,0,0,
	329,330,5,68,0,0,330,455,5,83,0,0,331,332,5,65,0,0,332,333,5,76,0,0,333,
	455,5,66,0,0,334,335,5,68,0,0,335,336,5,67,0,0,336,455,5,75,0,0,337,338,
	5,69,0,0,338,339,5,120,0,0,339,340,5,116,0,0,340,341,5,32,0,0,341,342,5,
	68,0,0,342,343,5,67,0,0,343,455,5,75,0,0,344,345,5,80,0,0,345,346,5,75,
	0,0,346,455,5,66,0,0,347,348,5,83,0,0,348,349,5,87,0,0,349,455,5,89,0,0,
	350,351,5,76,0,0,351,352,5,87,0,0,352,455,5,86,0,0,353,354,5,82,0,0,354,
	355,5,87,0,0,355,455,5,86,0,0,356,357,5,70,0,0,357,358,5,76,0,0,358,455,
	5,75,0,0,359,360,5,83,0,0,360,361,5,73,0,0,361,455,5,84,0,0,362,363,5,84,
	0,0,363,364,5,65,0,0,364,455,5,73,0,0,365,366,5,67,0,0,366,367,5,65,0,0,
	367,455,5,84,0,0,368,369,5,67,0,0,369,370,5,74,0,0,370,455,5,77,0,0,371,
	372,5,75,0,0,372,373,5,78,0,0,373,455,5,75,0,0,374,375,5,66,0,0,375,376,
	5,79,0,0,376,455,5,75,0,0,377,378,5,72,0,0,378,379,5,80,0,0,379,455,5,70,
	0,0,380,381,5,76,0,0,381,382,5,67,0,0,382,455,5,84,0,0,383,384,5,68,0,0,
	384,385,5,69,0,0,385,455,5,83,0,0,386,387,5,66,0,0,387,388,5,79,0,0,388,
	389,5,79,0,0,389,455,5,84,0,0,390,391,5,70,0,0,391,392,5,76,0,0,392,455,
	5,89,0,0,393,394,5,83,0,0,394,395,5,69,0,0,395,455,5,78,0,0,396,397,5,68,
	0,0,397,398,5,69,0,0,398,455,5,78,0,0,399,400,5,83,0,0,400,401,5,65,0,0,
	401,455,5,86,0,0,402,403,5,84,0,0,403,404,5,82,0,0,404,455,5,84,0,0,405,
	406,5,77,0,0,406,407,5,78,0,0,407,455,5,84,0,0,408,409,5,83,0,0,409,410,
	5,67,0,0,410,455,5,82,0,0,411,412,5,77,0,0,412,413,5,84,0,0,413,455,5,83,
	0,0,414,415,5,83,0,0,415,416,5,87,0,0,416,455,5,83,0,0,417,418,5,82,0,0,
	418,419,5,79,0,0,419,455,5,67,0,0,420,421,5,65,0,0,421,422,5,75,0,0,422,
	455,5,83,0,0,423,424,5,66,0,0,424,425,5,79,0,0,425,455,5,66,0,0,426,427,
	5,66,0,0,427,428,5,65,0,0,428,455,5,76,0,0,429,430,5,74,0,0,430,431,5,71,
	0,0,431,455,5,83,0,0,432,433,5,73,0,0,433,434,5,78,0,0,434,455,5,84,0,0,
	435,436,5,82,0,0,436,437,5,83,0,0,437,455,5,83,0,0,438,439,5,82,0,0,439,
	440,5,83,0,0,440,441,5,83,0,0,441,442,5,32,0,0,442,455,5,66,0,0,443,444,
	5,75,0,0,444,445,5,65,0,0,445,455,5,84,0,0,446,447,5,71,0,0,447,448,5,79,
	0,0,448,455,5,76,0,0,449,450,5,83,0,0,450,455,5,71,0,0,451,452,5,83,0,0,
	452,453,5,84,0,0,453,455,5,66,0,0,454,192,1,0,0,0,454,195,1,0,0,0,454,198,
	1,0,0,0,454,200,1,0,0,0,454,203,1,0,0,0,454,206,1,0,0,0,454,209,1,0,0,0,
	454,212,1,0,0,0,454,215,1,0,0,0,454,218,1,0,0,0,454,221,1,0,0,0,454,224,
	1,0,0,0,454,227,1,0,0,0,454,230,1,0,0,0,454,233,1,0,0,0,454,236,1,0,0,0,
	454,239,1,0,0,0,454,242,1,0,0,0,454,245,1,0,0,0,454,248,1,0,0,0,454,251,
	1,0,0,0,454,254,1,0,0,0,454,257,1,0,0,0,454,260,1,0,0,0,454,263,1,0,0,0,
	454,266,1,0,0,0,454,269,1,0,0,0,454,272,1,0,0,0,454,279,1,0,0,0,454,286,
	1,0,0,0,454,289,1,0,0,0,454,292,1,0,0,0,454,295,1,0,0,0,454,298,1,0,0,0,
	454,301,1,0,0,0,454,304,1,0,0,0,454,307,1,0,0,0,454,310,1,0,0,0,454,313,
	1,0,0,0,454,316,1,0,0,0,454,319,1,0,0,0,454,322,1,0,0,0,454,325,1,0,0,0,
	454,328,1,0,0,0,454,331,1,0,0,0,454,334,1,0,0,0,454,337,1,0,0,0,454,344,
	1,0,0,0,454,347,1,0,0,0,454,350,1,0,0,0,454,353,1,0,0,0,454,356,1,0,0,0,
	454,359,1,0,0,0,454,362,1,0,0,0,454,365,1,0,0,0,454,368,1,0,0,0,454,371,
	1,0,0,0,454,374,1,0,0,0,454,377,1,0,0,0,454,380,1,0,0,0,454,383,1,0,0,0,
	454,386,1,0,0,0,454,390,1,0,0,0,454,393,1,0,0,0,454,396,1,0,0,0,454,399,
	1,0,0,0,454,402,1,0,0,0,454,405,1,0,0,0,454,408,1,0,0,0,454,411,1,0,0,0,
	454,414,1,0,0,0,454,417,1,0,0,0,454,420,1,0,0,0,454,423,1,0,0,0,454,426,
	1,0,0,0,454,429,1,0,0,0,454,432,1,0,0,0,454,435,1,0,0,0,454,438,1,0,0,0,
	454,443,1,0,0,0,454,446,1,0,0,0,454,449,1,0,0,0,454,451,1,0,0,0,455,44,
	1,0,0,0,456,458,3,47,23,0,457,456,1,0,0,0,458,459,1,0,0,0,459,457,1,0,0,
	0,459,460,1,0,0,0,460,46,1,0,0,0,461,462,5,32,0,0,462,48,1,0,0,0,463,464,
	3,51,25,0,464,50,1,0,0,0,465,467,7,5,0,0,466,465,1,0,0,0,467,468,1,0,0,
	0,468,466,1,0,0,0,468,469,1,0,0,0,469,52,1,0,0,0,470,472,7,6,0,0,471,470,
	1,0,0,0,472,473,1,0,0,0,473,471,1,0,0,0,473,474,1,0,0,0,474,475,1,0,0,0,
	475,476,6,26,0,0,476,54,1,0,0,0,14,0,70,72,79,108,132,158,167,180,190,454,
	459,468,473,1,6,0,0];

	private static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TekkenNotationLexer.__ATN) {
			TekkenNotationLexer.__ATN = new ATNDeserializer().deserialize(TekkenNotationLexer._serializedATN);
		}

		return TekkenNotationLexer.__ATN;
	}


	static DecisionsToDFA = TekkenNotationLexer._ATN.decisionToState.map( (ds: DecisionState, index: number) => new DFA(ds, index) );
}